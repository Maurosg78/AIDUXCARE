name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  VITE_LANGFUSE_HOST: 'https://cloud.langfuse.com'
  NEXTAUTH_URL: 'http://localhost:3000'
  NODE_ENV: 'production'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Verify environment variables
      run: |
        echo "::group::Verificando variables de entorno"
        missing_vars=()
        for var in VITE_LANGFUSE_PUBLIC_KEY VITE_LANGFUSE_SECRET_KEY NEXTAUTH_SECRET; do
          if [ -z "${!var}" ]; then
            missing_vars+=($var)
          fi
        done
        if [ ${#missing_vars[@]} -ne 0 ]; then
          echo "⚠️ Variables de entorno faltantes: ${missing_vars[*]}"
          echo "Se usarán valores dummy para CI/CD"
        else
          echo "✅ Todas las variables de entorno están configuradas"
        fi
        echo "::endgroup::"
    
    - name: Run linting with warnings
      id: lint
      run: |
        echo "::group::Ejecutando ESLint"
        npm run lint || echo "LINT_FAILED=true" >> $GITHUB_ENV
        if [ "$LINT_FAILED" = "true" ]; then
          echo "⚠️ Se encontraron errores de linting"
          echo "Por favor, revisa los errores y corrige el código"
          exit 1
        fi
        echo "✅ Linting completado sin errores críticos"
        echo "::endgroup::"
    
    - name: Run tests
      run: npm run test
    
    - name: Build
      env:
        VITE_LANGFUSE_PUBLIC_KEY: ${{ secrets.VITE_LANGFUSE_PUBLIC_KEY }}
        VITE_LANGFUSE_SECRET_KEY: ${{ secrets.VITE_LANGFUSE_SECRET_KEY }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      run: npm run build

  deploy:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod' 